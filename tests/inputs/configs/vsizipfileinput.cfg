# ETL Chain that copies the names of files within a zip file as
# GDAL /vsizip names to standard output.

[etl]
chains = input_zip_file|output_std,
         input_zip_file_zip_name_filter|output_std,
         input_zip_file_xml_name_filter|output_std,
         input_zip_file_xml_re_name_filter|output_std,
         input_zip_file_xml_single_name_filter|output_std,
         input_zip_file_xml_single_name_nested_filter|output_std

[input_zip_file]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip

[input_zip_file_zip_name_filter]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip
name_filter = *.zip

[input_zip_file_xml_name_filter]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip
name_filter = *.xml

[input_zip_file_xml_re_name_filter]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip
# Example from BAG (Dutch Addresses and Buildings
name_filter = [0-9][0-9][0-9][0-9][LSVNPOW][ITBUNPP][GAOMDRL][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*.xml

[input_zip_file_xml_single_name_filter]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip
# Example from BAG (Dutch Addresses and Buildings: just one file (top-level)
name_filter = Leveringsdocument-BAG-Extract.xml

[input_zip_file_xml_single_name_nested_filter]
class = stetl.inputs.fileinput.VsiZipFileInput
file_path = tests/data/vsizipinput.zip
# Example from BAG (Dutch Addresses and Buildings: just one file (nested/embedded)
name_filter = 0221STA15092020-000001.xml


[output_std]
class = stetl.outputs.standardoutput.StandardOutput
